#include <Servo.h>
#include <EEPROM.h>

Servo myservo; // create servo object to control a servo
Servo myservo2;// create second servo object to control second servo

int potpin = 0;  // analog pin used to connect the potentiometer
int potpin2 = 1;
float val;    // variable to read the value from the analog pin
float val2;
float pos = EEPROM.read(0);
float pos2 = EEPROM.read(1);
float turnrate = 0.5;
float iniposx;
float iniposy;
float buttonpos;
bool buttonused = false;
bool buttonState = false;
bool lastButtonState = false;

void setup() {
  Serial.begin(9600);
  myservo.write(pos);
  myservo2.write(pos2);
  myservo.attach(9);
  myservo2.attach(10);
  iniposx = myservo.read();
  iniposy = myservo2.read();
  pinMode(2, INPUT_PULLUP);
  
  


}

void loop() {
  val = analogRead(potpin);            // reads the value of the potentiometer (value between 0 and 1023)
  val = map(val, 0, 1023, 0, 180);     // scale it to use it with the servo (value between 0 and 180)
  if(val >= 0 && val <=60 && pos >=0){
    pos -= turnrate; 
    myservo.write(pos);
    delay(15);
  }
  if(val >= 120 && val <=180 && pos <=180){
    pos += turnrate; 
    myservo.write(pos);
    delay(15);
  }
  
  val2 = analogRead(potpin2);            // reads the value of the potentiometer (value between 0 and 1023)
  
  val2 = map(val2, 0, 1023, 0, 180);     // scale it to use it with the servo (value between 0 and 180)
  if(val2 >= 0 && val2 <=60 && pos2 >= 25){
    pos2 -= turnrate; 
    myservo2.write(pos2);
    delay(15);
  }
  if(val2 >= 120 && val2 <=180 && pos2 <= 115){
    pos2 += turnrate; 
    myservo2.write(pos2);
    delay(15);
  }
  buttonState = !digitalRead(2);

  // compare the buttonState to its previous state
  if (buttonState != lastButtonState) {
    // if the state has changed, increment the counter
    if (buttonState == HIGH) {
      if (buttonused){
        while(myservo.read() != buttonpos){
          if(myservo.read() < buttonpos) pos += 0.5;
          if(myservo.read() > buttonpos) pos -= 0.5;

          myservo.write(pos);
    
          delay(15);
  }
      }else{
        buttonpos = myservo.read();
      }
      buttonused=!buttonused;

      // if the current state is HIGH then the button went from off to on:
    } 
    // Delay a little bit to avoid bouncing
    delay(50);
  }
  EEPROM.write(0, pos);
  EEPROM.write(1, pos2);
  Serial.println(pos2);
  lastButtonState = buttonState;
}
